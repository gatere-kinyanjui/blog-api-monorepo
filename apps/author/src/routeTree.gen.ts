/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as authSignupRouteImport } from './routes/(auth)/signup'
import { Route as authLoginRouteImport } from './routes/(auth)/login'
import { Route as appWriteRouteImport } from './routes/(app)/write'
import { Route as appDashboardRouteImport } from './routes/(app)/dashboard'
import { Route as appArticleRouteImport } from './routes/(app)/article'

const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const authSignupRoute = authSignupRouteImport.update({
  id: '/(auth)/signup',
  path: '/signup',
  getParentRoute: () => rootRouteImport,
} as any)
const authLoginRoute = authLoginRouteImport.update({
  id: '/(auth)/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const appWriteRoute = appWriteRouteImport.update({
  id: '/(app)/write',
  path: '/write',
  getParentRoute: () => rootRouteImport,
} as any)
const appDashboardRoute = appDashboardRouteImport.update({
  id: '/(app)/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const appArticleRoute = appArticleRouteImport.update({
  id: '/(app)/article',
  path: '/article',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/article': typeof appArticleRoute
  '/dashboard': typeof appDashboardRoute
  '/write': typeof appWriteRoute
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/article': typeof appArticleRoute
  '/dashboard': typeof appDashboardRoute
  '/write': typeof appWriteRoute
  '/login': typeof authLoginRoute
  '/signup': typeof authSignupRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/(app)/article': typeof appArticleRoute
  '/(app)/dashboard': typeof appDashboardRoute
  '/(app)/write': typeof appWriteRoute
  '/(auth)/login': typeof authLoginRoute
  '/(auth)/signup': typeof authSignupRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/article'
    | '/dashboard'
    | '/write'
    | '/login'
    | '/signup'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/article'
    | '/dashboard'
    | '/write'
    | '/login'
    | '/signup'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/(app)/article'
    | '/(app)/dashboard'
    | '/(app)/write'
    | '/(auth)/login'
    | '/(auth)/signup'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  appArticleRoute: typeof appArticleRoute
  appDashboardRoute: typeof appDashboardRoute
  appWriteRoute: typeof appWriteRoute
  authLoginRoute: typeof authLoginRoute
  authSignupRoute: typeof authSignupRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/signup': {
      id: '/(auth)/signup'
      path: '/signup'
      fullPath: '/signup'
      preLoaderRoute: typeof authSignupRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(auth)/login': {
      id: '/(auth)/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/write': {
      id: '/(app)/write'
      path: '/write'
      fullPath: '/write'
      preLoaderRoute: typeof appWriteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/dashboard': {
      id: '/(app)/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof appDashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/(app)/article': {
      id: '/(app)/article'
      path: '/article'
      fullPath: '/article'
      preLoaderRoute: typeof appArticleRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  appArticleRoute: appArticleRoute,
  appDashboardRoute: appDashboardRoute,
  appWriteRoute: appWriteRoute,
  authLoginRoute: authLoginRoute,
  authSignupRoute: authSignupRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
